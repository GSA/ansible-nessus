---
- name: checking for agent install
  win_service:
    name: 'tenable nessus agent'
  register: agent

- debug:
    msg: "nessus agent not found (installing)"
  when: not agent.exists

- debug:
    msg: "nessus agent found (skipping install)"
  when: agent.exists

- name: create {{ windows_agent_log }} directory
  win_file:
    path: '{{ windows_agent_log }}'
    state: directory
  when: not agent.exists

- name: install nessus agent (windows)
  win_package:
    path: '{{ windows_nessus_agent_url }}'
    log_path: '{{ windows_agent_log }}\nessus_log.txt'
    product_id: '{{ windows_nessus_product_id }}'
    state: present
    arguments: /qn
  ignore_errors: yes # adding ignore_errors since this will fail until you have an environment with connectivity to a nessus master host
  when: not agent.exists

- name: link nessus agent (windows)
  win_command: >
    "{{ windows_nessus_agent_path }}" agent link
    --key={{ nessus_agent_key }}
    --host={{ nessus_server_id }}
    --port={{ nessus_port_id }}
  ignore_errors: yes # adding ignore_errors since this will fail until you have an environment with connectivity to a nessus master host
  when: not agent.exists

- name: verify nessus started
  win_service:
    name: 'tenable nessus agent'
    state: started
    start_mode: auto
