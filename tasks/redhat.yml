---
- name: create {{ lin_agent_path }} directory
  file:
    path: '{{ lin_agent_path }}'
    state: directory
    mode: '0755'

- name: checking for installer
  stat:
    path: '{{ lin_agent_path }}{{ redhat_nessus_agent_filename }}'
  register: installer

- name: move installer to {{ lin_install_path }} directory
  copy:
    src: '{{ lin_agent_path }}/{{ item.name }}'
    dest: '{{ lin_agent_path }}/{{ item.name }}'
    mode: '0755'
  with_items:
    - { name: '{{ redhat_nessus_agent_filename }}'}
  when: not installer.stat.exists

- name: install nessus agent (redhat)
  yum:
    name: "{{ lin_agent_path }}/{{ redhat_nessus_agent_filename }}"
    state: present
    validate_certs: no
    disable_plugin: "yum-rhn-plugin"
    disablerepo: "rhel-8-appstream-rhui-rpms,rhel-8-baseos-rhui-rpms,rhui-client-config-server-8"
  when: path.stat.islnk is not defined

- name: check agent link status
  command: '{{ redhat_nessus_agent_path }}/sbin/nessuscli agent status'
  become: yes
  register: nessus_link
  ignore_errors: yes # adding ignore_errors since this will fail until you have an environment with connectivity to a nessus master host
  changed_when: nessus_link.rc != 0 and path.stat.islnk is defined

- name: register nessus agent (redhat)
  shell: >-
    "{{ lin_nessus_path }} agent link --key={{ nessus_agent_key }} --groups='{{ group_name }}' --host='{{ nessus_server_id }}' --port='{{ nessus_port_id }}'"
  args:
    creates: "/opt/nessus_agent/var/nessus/master.key"

- name: ensure required services are started (redhat)
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - nessusagent
